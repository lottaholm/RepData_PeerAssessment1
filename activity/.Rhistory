sum
data
getwd
getwd()
setwd("C:\\Users\\lotta.holm\\Documents\\Data Science\\RR\\RepData_PeerAssessment1\\activity")
library(data.table) ## required for fread
data <-fread("activity.csv")
str(data)
sum_steps<- tapply(data$steps, data$date, FUN=sum)
str(sum_steps)
sum_steps
?tapply
sum_steps2 <- as.data.frame.table(sum_steps)
sum_steps2
str(sum_steps2)
str(sum_steps)
?hist
summary(sum_steps2)
hist(sum_steps2$Freq)
hist(sum_steps2$Freq, breaks=60)
hist(sum_steps2$Freq, breaks=length(unique(sum_steps$Freq)))
hist(sum_steps2$Freq, breaks=length(unique(Freq)))
length(unique(sum_steps$Freq))
hist(sum_steps2$Freq, breaks=length(unique(sum_steps2$Freq)))
hist(sum_steps2$Freq)
hist(sum_steps2$Freq, breaks=length(unique(sum_steps2$Freq)))
hist(sum_steps2$Freq, breaks=61)
hist(sum_steps2$Freq, breaks=61, main="Histogram of steps taken each day", xlab="Daily steps")
hist(sum_steps2$Freq, breaks=61, main="Histogram of steps taken each day", xlab="Daily steps", col="blue")
hist(sum_steps2$Freq, breaks=61, main="Histogram of steps taken each day", xlab="Daily steps", col="lightblue")
de.off()
dev.off()
mean(sum_steps2$Freq)
mean(sum_steps2$Freq, na.omit=TRUE)
mean(!is.na(sum_steps2$Freq))
table(sum_steps2$Freq)
table(sum_steps2)
xtabs(sum_steps2)
sum_steps2
mean(!is.na(sum_steps2$Freq))
sum(!is.na(sum_steps2$Freq))
sum_steps2$Freq
str(sum_steps2$Freq)
class(sum_steps2$Freq)
length(sum_steps2$Freq)
length(!is.na(sum_steps2$Freq))
length(is.na(sum_steps2$Freq))
mean(sum_steps2$Freq)
daily_steps <- sum_steps2$Freq
daily_steps
daily_steps <- !is.na(sum_steps2$Freq)
daily_steps
daily_steps <- sum_steps2$Freq[!is.na(sum_steps2$Freq)]
daily_steps
mean(daily_steps)
median(daily_steps)
sum_steps_int <- tapply(data$steps, data$interval, FUN=sum)
sum_steps_int2 <- as.data.frame.table(sum_steps_int)
hist(sum_steps_int2$Freq, breaks=471, main="Histogram of steps taken each interval, averaged across days", xlab="Steps per interval", col="lightgreen")
hist(sum_steps_int2$Freq)
hist(sum_steps_int2$Freq, breaks=10)
sum_steps_int2
data
unique(data$steps)
sum_steps<- tapply(data$steps, data$date, FUN=sum)
sum_steps
sum_int<- tapply(data$steps, data$interval, FUN=sum)
sum_int
?tapply
sum_int<- tapply(data$steps, data$interval, FUN=sum, na.rm=TRUE)
sum_int
sum_steps<- tapply(data$steps, data$date, FUN=sum, , na.rm=TRUE)
sum_steps<- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
sum_steps
mean_steps_int <- tapply(data$steps, data$interval, FUN=mean, na.rm=TRUE)
mean_steps_int
mean_steps_int2 <- as.data.frame.table(mean_steps_int)
hist(mean_steps_int2$Freq, breaks=471, main="Histogram of steps taken each interval, averaged across days", xlab="Steps per interval", col="lightgreen")
dev.off()
library(ggplot2)
interval_graph <- ggplot(data, aes(mean_steps_int2))
interval_graph+geom_smooth
interval_graph+geom_smooth()
meadn_steps_int2
mean_steps_int2
interval_graph <- ggplot(data, aes(mean_steps_int2$Var1, mean_steps_int2$Freq))
interval_graph+geom_smooth()
interval_graph <- ggplot(mean_steps_int2, aes(Var1, Freq))
interval_graph+geom_smooth()
interval_graph+geom_smooth(model=lm)
interval_graph+geom_smooth(lm)
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="l")
?plot
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="b")
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="p")
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="l")
dev.off()
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="l")
plot(mean_steps_int2$Var1, mean_steps_int2$Freq, type="n")
lines(mean_steps_int2$Var1, mean_steps_int2$Freq)
library( lattice )
xyplot( Freq ~ Var1, mean_steps_int2, group=gp, type='b' )
xyplot( Freq ~ Var1, mean_steps_int2, type='b' )
?xyplot
xyplot( Freq ~ Var1, mean_steps_int2)
xyplot( Freq ~ Var1, mean_steps_int2, type='b' )
xyplot( Freq ~ Var1, mean_steps_int2, type='l' )
mean_steps_int2[,max(mean_steps_int2$steps)]
mean_steps_int2[max(mean_steps_int2$steps)]
mean_steps_int2$Var1[max(mean_steps_int2$steps)]
max(mean_steps_int2$steps)
max(!is.na(mean_steps_int2$steps))
str(mean_steps_int2)
table(mean_steps_int2)
table(mean_steps_int2$Freq, mean_steps_int2$Var1)
table(mean_steps_int2$Var1, mean_steps_int2$Freq)
str(mean_steps_int2)
max(mean_steps_int2$Freq)
mean_steps_int2$Var1[max(mean_steps_int2$Freq)]
xyplot( Var1 ~ Freq, mean_steps_int2, type='l')
xyplot( Freq ~ Var1, mean_steps_int2, type='l')
summary(mean_steps_int2$Freq)
summary(mean_steps_int2$Var1)
mean_steps_int2$Freq
mean_steps_int2$Var1
mean_steps_int2$Var1[max(mean_steps_int2$Freq)] ## verkar funka, säger att 1705 är tidpunkten då flest steg tas 
mean_steps_int2
xyplot( Freq ~ Var1, mean_steps_int2, type='l') ## OBS OBS! Formatera grafen bättre!!! Behövs någon slags sort by antagligen...??
dev.copy(png, file="steps_intervals.png", width = 2480, height = 480)
dev.off()
dev.copy(png, file="steps_intervals.png", width = 12480, height = 480)
dev.off()
max(mean_steps_int2$Freq)
mean_steps_int2$Var1[max(mean_steps_int2$Freq)]
a <- mean_steps_int2$Var1[max(mean_steps_int2$Freq)]
a
str(a)
mean_steps_int2$Var1[mean_steps_int2$Freq=206.1698]
mean_steps_int2$Var1[mean_steps_int2$Freq==206.1698]
class(mean_steps_int2$Var1[mean_steps_int2$Freq==206.1698])
str(mean_steps_int2)
mean_steps_int3 <- mean_steps_int2
mean_steps_int3$Var1 <- as.numeric(mean_steps_int2$Var1)
str(mean_steps_int3)
mean_steps_int2$Var1[max(mean_steps_int2$Freq)]
mean_steps_int2$Var1[max(mean_steps_int2$Freq)][1] 1705
288 Levels: 0 5 10 15 20 25 30 35 40 45 50 55 100 105 110 115 120 125 130 135 140 145 150 155 200 205 210 215 220 225 ... 2355
mean_step_int2$Var1[2355]
mean_steps_int2$Var1[2355]
meantest <- tapply(data$steps, data$interval, FUN=mean, na.rm=TRUE, as.factor=FALSE)
str(meantest)
mean_steps_int <- tapply(data$steps, data$interval, FUN=mean, na.rm=TRUE)
str(mean_steps_int)
?as.character.factor
str(mean_steps_int2)
mean_steps_int2$Var1 <- as.character.factor(mean_steps_int2$Var1
)
str(mean_steps_int2)
mean_steps_int2$Var1[max(mean_steps_int2$Freq)]
max(mean_steps_int2$Freq)
mean_steps_int2$Var1[206.1698]
mean_steps_int2
mean_steps_int2$Var1[206.1698113]
str(mean_steps_int2)
mean_steps_int2$Var1
> n = c(2, 3, 5) 
> s = c("aa", "bb", "cc") 
> b = c(TRUE, FALSE, TRUE) 
n = c(2, 3, 5) 
 s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b) 
df
df$n[df$s=="aa"]
df$s[df$n=="5"]
df$s[max(df$n)]
max(df$n)
mean_steps_int2$Var1[mean_steps_int2$Freq=="206.1698113""]
)
)
mean_steps_int2$Var1[mean_steps_int2$Freq=="206.1698113"]
q()
